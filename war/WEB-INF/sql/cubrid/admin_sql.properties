###########################################################################
# 작성자 : 김유근 (coolang)
# 최초작성일 : 2007-10-24
# 용도 : admin 관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
# 공지사항 
admin.board.select=SELECT b.boardID, b.userID, b.title, b.content, b.fileName, b.registDate, b.hit, b.priorNum, b.readAuth, u.userName \
					FROM tm_board  b INNER JOIN tm_users u ON b.userID=u.userID  
admin.board.select_user=SELECT b.boardID, b.userID, b.title, b.content, b.fileName, b.registDate, b.hit, b.priorNum, b.readAuth, u.userName \
					FROM tm_board  b INNER JOIN tm_users u ON b.userID=u.userID \
					where readAuth = 3 or ( readAuth = 2 and u.groupID = :groupID ) \					
admin.board.tail=\ ORDER BY b.priorNum, b.registDate DESC  for orderby_num() BETWEEN :start AND :count

admin.board.totalcount=SELECT COUNT(*) FROM tm_board  b INNER JOIN tm_users u ON b.userID=u.userID 

admin.board.insert=INSERT INTO tm_board(title, content, userID, fileName, priorNum, registDate, upload_key, readAuth ) \
				VALUES(:title, :content, :userID, :fileName, :priorNum, sysdate(), :upload_key, :readAuth)
admin.board.delete=DELETE FROM tm_board WHERE boardID = :boardID
admin.board.view=SELECT boardID, title, content, b.userID, u.userName, fileName, priorNum, b.registDate, hit, upload_key, readAuth FROM tm_board b INNER JOIN tm_users u ON b.userID=u.userID  WHERE b.boardID = :boardID
admin.board.update=UPDATE tm_board SET title=:title, content=:content, fileName=:fileName, priorNum=:priorNum, registDate=sysdate(), upload_key=:upload_key, readAuth=:readAuth  WHERE boardID=:boardID
admin.board.updatehit=UPDATE tm_board set hit=hit+1 WHERE boardID=:boardID
admin.board.select_show=SELECT b.boardID, b.userID, b.title, b.content, b.fileName, b.registDate, b.hit, b.priorNum, b.readAuth, u.userName \
					FROM tm_board  b INNER JOIN tm_users u ON b.userID=u.userID \
					where readAuth = 3 or ( readAuth = 2 and u.groupID = :groupID ) \
					order by b.registDate desc  
#파일 임시 저장
admin.fileupload.insert = INSERT INTO tm_board_file(upload_key, real_file_name, new_file_name) VALUES (:upload_key, :real_file_name, :new_file_name)
#임시 파일 레코드 읽기
admin.fileupload.info = SELECT upload_key, real_file_name, new_file_name FROM tm_board_file WHERE upload_key = :upload_key 

# 메뉴관련 
admin.menu.selectmain=SELECT * FROM tm_mainmenu WHERE useYN='Y'

admin.menu.selectsub=SELECT * FROM tm_submenu WHERE useYN='Y'
						
admin.menu.selectmenu=SELECT m.mainMenuID, m.mainMenuName, s.subMenuID, s.subMenuName, s.path \
						FROM tm_mainmenu m LEFT OUTER JOIN tm_submenu s \
						ON m.mainMenuID = s.mainMenuID WHERE m.useYN='Y' and m.useYN='Y' ORDER BY m.priorNum, s.priorNum

admin.menu.selectSubAuth = SELECT m.mainMenuID, s.subMenuID, s.windowId \
						FROM tm_mainmenu m ,tm_submenu s, tm_users u, tm_users_auth a \
						WHERE m.mainMenuID = s.mainMenuID \
						AND m.useYN='Y' \
						AND a.subMenuID = s.subMenuID \
						AND u.userID = a.userID \
						AND a.userID = :userID
# 계정찾기  
admin.login.finduser=SELECT u.userID, u.userName, u.groupID, g.groupName, u.userLevel, u.isAdmin, u.auth_csv, u.auth_query, u.auth_direct, u.auth_related, u.auth_write_mail, u.auth_send_mail, u.senderName, u.senderEmail FROM tm_users u \
   					   INNER JOIN tm_usergroup g ON u.groupID = g.groupID WHERE u.useYN = 'Y' and u.userID = :userID and u.userPWD = :userPWD
# 그룹/계정관리
admin.usergroup.selectgroup=SELECT groupID, groupName,  description, isAdmin, (select count(*) from tm_users where groupID=tm_usergroup.groupID) userCount, registDate  \
										 FROM tm_usergroup
admin.usergroup.grouptail=\ ORDER BY groupID  for orderby_num() BETWEEN :start AND :countPerPage

admin.usergroup.totalgroup=SELECT COUNT(*) FROM tm_usergroup
admin.usergroup.getmaxgroupid=SELECT MAX(CAST(groupID AS INT))+1 FROM tm_usergroup
admin.usergroup.insertgroup=INSERT INTO tm_usergroup(groupID, groupName, description, registDate, auth_csv, auth_query, auth_direct, auth_related, auth_write_mail, auth_send_mail) VALUES(:groupID, :groupName, :description,sysdate(), 'Y', 'Y', 'Y', 'Y', 'Y', 'Y')
admin.usergroup.deletegroup=DELETE FROM tm_usergroup WHERE groupID = :groupID
admin.usergroup.updategroup=UPDATE tm_usergroup SET groupName = :groupName, description = :description WHERE groupID = :groupID
admin.usergroup.totaluser=SELECT COUNT(*) FROM tm_users u

admin.usergroup.viewgroup = SELECT * FROM tm_usergroup WHERE groupID = :groupID

admin.usergroup.quickSearchUser=SELECT userID, userName, groupID FROM tm_users WHERE useYN = 'Y' AND (userName Like :userName or userID Like :userID)

admin.usergroup.selectuser=SELECT u.userID, u.userPWD, u.userName, u.groupID, g.groupName, u.userLevel, u.email, u.cellPhone, u.description, u.useYN, u.isadmin, u.registDate \
								FROM tm_users u INNER JOIN tm_usergroup g ON u.groupID = g.groupID
admin.usergroup.usertail=\ ORDER BY u.registDate DESC  for orderby_num() BETWEEN :start AND :countPerPage
admin.usergroup.viewuser=SELECT u.*, g.groupName \
			FROM tm_users u, tm_usergroup g \
			WHERE u.userID = :userID AND g.groupID = u.groupID 
admin.usergroup.viewhelper=SELECT * \
			FROM tm_users \
			WHERE isHelper = 'Y' And useYN = 'Y'
admin.usergroup.helperuser=SELECT u.*, g.groupName \
			FROM tm_users u, tm_usergroup g \
			WHERE  g.groupID = u.groupID AND u.useYN = 'Y' AND isHelper='Y' ORDER BY  u.userID for orderby_num()  BETWEEN  0 AND 1

admin.usergroup.setishelpern=UPDATE tm_users SET isHelper='N'
admin.usergroup.updateuser=UPDATE tm_users SET userPWD = :userPWD, userName = :userName, groupID = :groupID, userLevel = :userLevel, description = :description, useYN = :useYN, isHelper = :isHelper, senderName = :senderName, email = :email, cellPhone = :cellPhone ,senderEmail = :senderEmail, senderCellPhone = :senderCellPhone WHERE userID = :userID
admin.usergroup.deleteuser=UPDATE tm_users SET useYN = 'N' WHERE userID = :userID
admin.usergroup.insertuser=INSERT INTO tm_users(userID, userPWD, userName, groupID, userLevel, email, cellPhone, description, useYN, registDate, auth_csv, auth_query, auth_direct, auth_related, auth_send_mail, auth_write_mail, isHelper, senderName, senderEmail, senderCellPhone) \
							SELECT :userID, :userPWD, :userName, :groupID, :userLevel, :email, :cellPhone, :description, :useYN,sysdate(), auth_csv, auth_query, auth_direct, auth_related, auth_send_mail, auth_write_mail, :isHelper, :senderName, :senderEmail, :senderCellPhone \
							FROM tm_usergroup WHERE groupid = :groupID
admin.usergroup.insertgroupadmin=INSERT INTO tm_users(userID, userPWD, userName, groupID, userLevel, email, cellPhone, description, useYN, registDate, isAdmin, auth_csv, auth_query, auth_direct, auth_related, auth_send_mail, auth_write_mail, isHelper, senderName, senderEmail, senderCellPhone ) \
							values( :userID, :userPWD, :userName, :groupID, :userLevel, :email, :cellPhone, :description, :useYN,sysdate(), 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', :isHelper, :senderName, :senderEmail, :senderCellPhone) \
							

						
#권한설정
admin.usergroup.getauth=SELECT authType, subMenuAuth FROM tm_users_auth WHERE userID = :userID AND mainMenuID = :mainMenuID AND subMenuID = :subMenuID
admin.usergroup.insertauth=INSERT INTO tm_users_auth (userID, mainMenuID, subMenuID, authType, subMenuAuth, registDate) VALUES(:userID, :mainMenuID, :subMenuID, :authType, :subMenuAuth,sysdate())  
admin.usergroup.selectdb=SELECT dbID, dbName, description FROM tm_dbset WHERE useYN = 'Y' and tmDB='N'
admin.usergroup.selectuserlevelauth=SELECT a.mainMenuID, a.subMenuID, a.authType, a.subMenuAuth FROM tm_users_auth a INNER JOIN \
 								(select userID from tm_users where userLevel = :userLevel order by registDate desc  for orderby_num() BETWEEN 0 AND 1) u ON u.userID = a.userID							
admin.usergroup.selectgrouplist=SELECT groupID, groupName FROM tm_usergroup ORDER BY groupName DESC 

admin.usergroup.updatechangeUserGroupID = UPDATE tm_users SET groupID = :groupID WHERE userID = :userID

admin.usergroup.viewuserauth=SELECT a.* FROM tm_users_auth a, tm_mainmenu m, tm_submenu s \
				WHERE a.userID = :userID AND a.submenuid = s.submenuid AND s.mainmenuid = m.mainmenuid AND m.useYN = 'Y' ORDER BY a.submenuid

admin.usergroup.viewuserMenuTreeAuth=SELECT a.* FROM tm_users_auth a, tm_mainmenu m, tm_submenu s \
				WHERE a.userID = :userID AND a.submenuid = s.submenuid AND s.mainmenuid = m.mainmenuid AND s.hasAuth = 'N' AND m.useYN = 'Y' ORDER BY a.submenuid 

admin.usergroup.deleteauth=DELETE FROM tm_users_auth WHERE userID = :userID

admin.usergroup.authMaster=SELECT * FROM tm_auth_master WHERE submenuid = :submenuID ORDER BY fieldName

admin.usergroup.viewUserDbSetAuth=SELECT d.dbid FROM tm_dbset d, tm_user_dbset_auth a \
					WHERE a.userid=:userID AND a.dbid=d.dbid AND d.useYN = 'Y' and d.tmDB = 'N'

admin.usergroup.groupAuth = SELECT auth_csv, auth_direct, auth_related, auth_query, auth_send_mail, auth_write_mail \
				FROM tm_usergroup WHERE groupid = :groupID


admin.usergroup.deleteAllDataAuth = DELETE FROM tm_user_dbset_auth WHERE userid = :_group

admin.usergroup.deleteDataAuth = DELETE FROM tm_user_dbset_auth WHERE userid = :userID AND dbid = :dbID


admin.usergroup.deleteAllMenuAuth = DELETE FROM tm_users_auth WHERE userid = :_group

admin.usergroup.deleteMenuAuth = DELETE FROM tm_users_auth WHERE userid = :userID AND submenuid = :subMenuID


admin.usergroup.insertUserDataAuth = INSERT INTO tm_user_dbset_auth(userid, dbid) \
					SELECT a.userid, :dbID \
					FROM tm_users a \
					LEFT JOIN tm_user_dbset_auth c ON c.userid = a.userid AND c.dbid = :dbID  \
					WHERE c.userid IS NULL AND a.userid=:userID

admin.usergroup.insertGroupDataAuth = INSERT INTO tm_user_dbset_auth(userid, dbid) \
					SELECT :_groupID, :dbID \
					FROM tm_usergroup a \
					LEFT JOIN tm_user_dbset_auth c ON c.userid = :_groupID AND c.dbid = :dbID  \
					WHERE c.userid IS NULL AND a.groupid=:groupID

admin.usergroup.insertUserMenuAuth = INSERT INTO tm_users_auth(userid,mainmenuid,submenuid,authtype,submenuauth,registdate) \
				 SELECT a.userid, '',:subMenuID,'','',sysdate() \
				 FROM tm_users a \
				 LEFT JOIN tm_users_auth c ON c.userid = a.userid AND c.submenuid = :subMenuID \
				 WHERE c.userid IS NULL AND a.userid = :userID 

admin.usergroup.insertGroupMenuAuth = INSERT INTO tm_users_auth(userid,mainmenuid,submenuid,authtype,submenuauth,registdate) \
				 SELECT :_groupID, '',:subMenuID,'','',sysdate() \
				 FROM tm_usergroup a \
				 LEFT JOIN tm_users_auth c ON c.userid = :_groupID AND c.submenuid = :subMenuID \
				 WHERE c.userid IS NULL AND a.groupid = :groupID

admin.usergroup.updateGroupAuth = UPDATE tm_usergroup SET auth_csv = :auth_csv, auth_related = :auth_related, auth_direct = :auth_direct, auth_query = :auth_query, auth_send_mail = :auth_send_mail, auth_write_mail = :auth_write_mail WHERE groupid = :groupID

admin.usergroup.updateUserAuth = UPDATE tm_users SET auth_csv = :auth_csv, auth_related = :auth_related, auth_direct = :auth_direct, auth_query = :auth_query, auth_send_mail = :auth_send_mail, auth_write_mail = :auth_write_mail WHERE userid = :userID


admin.usergroup.insertMenuDefaultAuth = INSERT INTO tm_users_auth(userid,mainmenuid,submenuid,authtype,submenuauth,registdate) \
					SELECT u.userid,'',a.submenuid,'','',sysdate() \
					FROM tm_users u inner join tm_users_auth a on a.userid = concat('_group_',u.groupid) \
					WHERE u.userID = :userID 


admin.usergroup.insertDataDefaultAuth = INSERT INTO tm_user_dbset_auth(userid, dbid) \
					SELECT u.userid, a.dbid \
					FROM tm_users u inner join tm_user_dbset_auth a on a.userid = concat('_group_',u.groupid) \
					WHERE u.userid = :userID 

admin.usergroup.insertMenuGroupAdminAuth = INSERT INTO tm_users_auth(userid,mainmenuid,submenuid,authtype,submenuauth,registdate) \
					SELECT :userID,'',subMenuID,'','',sysdate()    \
					FROM tm_submenu   
					


admin.usergroup.insertDataGroupAdminAuth = INSERT INTO tm_user_dbset_auth(userid, dbid) \
					SELECT :userID, dbid   \
					FROM tm_dbset where dbid <> 10 
 

admin.usergroup.selectgroupuser=SELECT g.groupID, groupName FROM tm_usergroup g ,tm_users u where u.groupID = g.groupID and userID = :userID 
admin.usergroup.selectgroupadmin=SELECT groupID, groupName FROM tm_usergroup 
 

#관리자나 소속관리자리스트
admin.usergroup.selectmaster=SELECT userID, userName FROM tm_users WHERE useYN='Y' AND (( userLevel='1') OR ( userLevel='2' AND groupID=:groupID)) ORDER BY userLevel DESC

# DB설정
admin.dbjdbcset.selectdb=SELECT d.dbID, d.driverID, d.dbName, j.driverName, d.dbURL, d.encodingYN, d.defaultYN, d.useYN, d.dbUserID, d.dbUserPWD, j.driverClass  FROM tm_dbset d INNER JOIN tm_jdbcset j ON d.driverID = j.driverID WHERE d.tmDB='N'
admin.dbjdbcset.selectdbtail=\ ORDER BY d.dbID for orderby_num() BETWEEN :start AND :countPerPage
admin.dbjdbcset.selectjdbc=SELECT driverID, driverName, driverClass, sampleURL FROM tm_jdbcset	
admin.dbjdbcset.viewjdbc=SELECT driverID, driverName, driverClass, sampleURL FROM tm_jdbcset WHERE driverID = :driverID
admin.dbjdbcset.getmaxdbid=SELECT MAX(dbID) FROM tm_dbset; 
admin.dbjdbcset.insertdb=INSERT INTO tm_dbset(dbID, dbName, dbURL, dbUserID, dbUserPWD, driverID, encodingYN, description, defaultYN, useYN) \
							VALUES(:dbID, :dbName, :dbURL, :dbUserID, :dbUserPWD, :driverID, :encodingYN, :description, :defaultYN, :useYN)
admin.dbjdbcset.viewdb=SELECT d.dbID, d.dbName, d.driverID, d.dbURL, d.dbUserID, d.dbUserPWD, d.encodingYN, d.defaultYN, d.description, d.useYN, j.driverClass \
						FROM tm_dbset d INNER JOIN tm_jdbcset j ON d.driverID = j.driverID WHERE d.dbID = :dbID
admin.dbjdbcset.deletedb=DELETE FROM tm_dbset WHERE dbID = :dbID
admin.dbjdbcset.updatedb=UPDATE tm_dbset SET driverID=:driverID, dbName=:dbName, dbURL=:dbURL, dbUserID=:dbUserID, dbUserPWD=:dbUserPWD, encodingYN=:encodingYN, description=:description, defaultYN=:defaultYN, useYN=:useYN \
							WHERE dbID=:dbID
admin.dbjdbcset.userdb=SELECT dbID,dbName,description FROM tm_dbset WHERE useYN='Y' and tmDB='N'
admin.dbjdbcset.totalcount=SELECT count(*) FROM tm_dbset d INNER JOIN tm_jdbcset j ON d.driverID = j.driverID WHERE d.tmDB='N'
admin.dbjdbcset.checkusedb=SELECT COUNT(*) FROM tm_target_list WHERE dbID=:dbID
admin.dbjdbcset.updatedefault=UPDATE tm_dbset SET defaultYN='N'	WHERE dbID !<> :dbID 
#환경 설정 관련 
admin.systemset.select=SELECT configID, configFlag,  name, configName,configValue, configDesc FROM tm_config WHERE configFlag=:configFlag ORDER BY configID 
admin.systemset.update=UPDATE tm_config SET configValue=:configValue WHERE configID=:configID
admin.systemset.valuse=SELECT configValue FROM tm_config WHERE configFlag=:configFlag AND configName = :configName

#도에인 설정 관련 
admin.domainset.select=SELECT domainFlag, domainID, domainType, domainName, threadCount, socketTimeOut, socketPerSendCount FROM tm_domainconfig WHERE domainFlag=:domainFlag ORDER BY domainID DESC 
admin.domainset.view=SELECT domainID, domainType, domainName, threadCount, socketTimeOut, socketPerSendCount FROM tm_domainconfig WHERE domainID = :domainID
admin.domainset.insert=INSERT INTO tm_domainconfig  (domainFlag, domainName, domainType, threadCount, socketTimeOut, socketPerSendCount) VALUES (:domainFlag,  :domainName, '2', :threadCount, :socketTimeOut, :socketPerSendCount)
admin.domainset.delete=DELETE FROM tm_domainconfig WHERE domainID = :domainID AND domainType='2'
admin.domainset.update=UPDATE tm_domainconfig SET domainName=:domainName,  threadCount=:threadCount, socketTimeOut=:socketTimeOut, socketPerSendCount=:socketPerSendCount WHERE domainID=:domainID
admin.domainset.count=SELECT count(*) FROM tm_domainconfig   
#보내는 사람관리 
admin.sender.select=SELECT senderID, S.senderName, S.senderEmail, S.senderCellPhone, S.description, S.userID, S.shareType, S.useYN, S.defaultYN, S.registDate, U.userName FROM tm_sender S INNER JOIN tm_users U ON S.userID = U.userID where 1=1 						
admin.sender.select_user= and (s.shareType = '3' or s.shareType = '2' or (S.userID = :userID and s.shareType = '1') ) 
admin.sender.tail=\ ORDER BY S.registDate DESC  for orderby_num() BETWEEN :start AND :countPerPage
admin.sender.totalcount=SELECT COUNT(*) FROM tm_sender S INNER JOIN tm_users U ON S.userID = U.userID where 1=1 
admin.sender.insert=INSERT INTO tm_sender(senderName, senderEmail, senderCellPhone, description, userID, shareType, useYN, defaultYN, registDate) \
							VALUES(:senderName, :senderEmail, :senderCellPhone, :description, :userID, :shareType,  :useYN,:defaultYN, SYSTIMESTAMP)	
admin.sender.update=UPDATE tm_sender SET senderName = :senderName, senderEmail = :senderEmail, senderCellPhone = :senderCellPhone, description = :description, \
						userID = :userID, shareType = :shareType, useYN = :useYN, defaultYN=:defaultYN, registDate = SYSTIMESTAMP WHERE senderID = :senderID
admin.sender.view=SELECT senderID, senderName, senderEmail, senderCellPhone, description, userID, shareType, useYN, defaultYN, registDate FROM tm_sender WHERE senderID = :senderID
admin.sender.delete=DELETE FROM tm_sender WHERE senderID = :senderID
#원투원정보관리
admin.onetoone.select=SELECT onetooneID, onetooneName, onetooneAlias FROM tm_onetoone ORDER BY onetooneID
#대량메일그룹관리
admin.massmailgroup.select=SELECT massMailGroupID, massMailGroupName, description, registDate, useYN, isDefault FROM tm_massmail_group where isDeleted = 'N' 
admin.massmailgroup.totalcount=SELECT COUNT(*) FROM tm_massmail_group where isDeleted = 'N' 
admin.massmailgroup.tail=\ ORDER BY massMailGroupID desc for orderby_num() BETWEEN :start AND :countPerPage
admin.massmailgroup.insert=INSERT INTO tm_massmail_group(massMailGroupName, description, useYN, registDate, isDefault) VALUES(:massMailGroupName,:description,:useYN, SYSTIMESTAMP, :isDefault);   
admin.massmailgroup.update=UPDATE tm_massmail_group SET massMailGroupName=:massMailGroupName, description=:description, registDate=SYSTIMESTAMP, useYN=:useYN, isDefault = :isDefault where massMailGroupID=:massMailGroupID
admin.massmailgroup.delete=UPDATE tm_massmail_group SET isDeleted = 'Y' where massMailGroupID = :massMailGroupID
admin.massmailgroup.view=SELECT massMailGroupID, massMailGroupName, description, registDate,useYN, isDefault FROM tm_massmail_group WHERE massMailGroupID=:massMailGroupID 
admin.massmailgroup.viewchk=SELECT massMailGroupID, massMailGroupName, description, registDate,useYN, isDefault FROM tm_massmail_group WHERE isDeleted='N' and massMailGroupName=:massMailGroupName
admin.massmailgroup.update_default=UPDATE tm_massmail_group SET isDefault = 'N' where massMailGroupID <> :massMailGroupID 
#영구적인실패메일관리
admin.persistfailmail.select=SELECT sendID, email, i.massmailTitle, p.massmailID, l.targetName, p.targetID, g.massmailGroupName, p.massmailGroupID, smtpCode, smtpMsg, customerID, p.registDate FROM tm_massmail_persistfail p inner join tm_massmail_info i on i.massmailID=p.massmailID inner join tm_target_list l on p.targetID = l.targetID INNER JOIN tm_massmail_group g ON p.massmailGroupID=g.massmailGroupID 
admin.persistfailmail.tail=\ ORDER BY p.registDate desc for orderby_num() BETWEEN :start AND :countPerPage
admin.persistfailmail.totalcount=SELECT COUNT(*) FROM tm_massmail_persistfail
admin.persistfailmail.delete=DELETE FROM tm_massmail_persistfail WHERE sendID=:sendID
#수신거부자메일
admin.rejectmail.select=SELECT  r.rejectID, r.email, i.massmailTitle, r.massmailID, r.massmailGroupID, g.massmailGroupName,  r.customerID, r.userID, r.registDate, u.userName FROM tm_massmail_reject r \
				INNER JOIN tm_massmail_group g ON r.massmailGroupID=g.massmailGroupID left join tm_massmail_info i on i.massmailID=r.massmailID left join tm_users u on r.userID=u.userID WHERE 1=1 
		
admin.rejectmail.tail=\ ORDER BY r.registDate desc for orderby_num() BETWEEN :start AND :countPerPage 
admin.rejectmail.totalcount=SELECT  count(*) FROM tm_massmail_reject r \
				INNER JOIN tm_massmail_group g ON r.massmailGroupID=g.massmailGroupID left join tm_massmail_info i on i.massmailID=r.massmailID left join tm_users u on r.userID=u.userID WHERE 1=1
admin.rejectmail.delete=DELETE FROM tm_massmail_reject WHERE rejectID=:rejectID
admin.rejectmail.insert=INSERT INTO tm_massmail_reject(email,massmailID,targetID,massmailGroupID,userID,groupID,registDate) VALUES(:email,:massmailID,:targetID,:massmailGroupID,:userID,:groupID,SYSTIMESTAMP)

#Manager
admin.manager.select=SELECT engineID, engineName, engineDesc, engineStatus, errorCount, serverIP, updateDate FROM tm_engine_status
admin.manager.update=UPDATE tm_engine_status SET engineStatus=:engineStatus WHERE engineID=:engineID
admin.manager.selectenginestate=SELECT engineStatus, errorCount, updateDate FROM tm_engine_status where serverIP = :serverIP and engineID = :engineID 

#영구 도메인 관리 
admin.persistdomain.select=SELECT domainID, domain_name, description, registDate,  userID, useYN FROM tm_persistdomain 
admin.persistdomain.tail=\ ORDER BY domainID DESC for orderby_num() BETWEEN :start AND :countPerPage
admin.persistdomain.totalcount=SELECT COUNT(*) FROM tm_persistdomain 
admin.persistdomain.insert=INSERT INTO tm_persistdomain(domain_name, description, registDate, userID, useYN) \
							VALUES(:domain_name, :description, SYSTIMESTAMP, :userID, :useYN)	
admin.persistdomain.update=UPDATE tm_persistdomain SET domainID = :domainID, domain_name = :domain_name, description = :description, registDate = SYSTIMESTAMP, userID = :userID, useYN = :useYN WHERE domainID = :domainID
admin.persistdomain.view=SELECT domainID, domain_name, description, registDate, userID, useYN FROM tm_persistdomain WHERE domainID = :domainID
admin.persistdomain.delete=DELETE FROM tm_persistdomain WHERE domainID = :domainID
#고객디비연동
admin.dbconnect.selectinfo=SELECT c.dbID, c.connectDBName ,d.dbName, c.tableName, c.queryText, c.userID, c.useYN, c.registDate, c.updateScheduleDate, c.updateStartDate, c.updateEndDate, c.state, c.totalCount, d.defaultYN FROM tm_connectdb_info c INNER JOIN tm_dbset d ON c.dbID=d.dbID WHERE 1=1
admin.dbconnect.selectinfotail=\ ORDER BY c.registDate DESC for orderby_num() BETWEEN :start AND :countPerPage
admin.dbconnect.totalcountinfo=SELECT COUNT(*) FROM tm_connectdb_info c INNER JOIN tm_dbset d ON c.dbID=d.dbID WHERE 1=1
admin.dbconnect.insertinfo=INSERT INTO tm_connectdb_info(dbID, connectDBName, updateType, updateValue, updateScheduleDate, queryText, tableName, userID, useYN, registDate) VALUES(:dbID, :connectDBName, :updateType, :updateValue, :updateScheduleDate, :queryText, :tableName, :userID, :useYN, SYSTIMESTAMP)
admin.dbconnect.updateinfo=UPDATE tm_connectdb_info SET connectDBName=:connectDBName, updateType=:updateType, updateValue=:updateValue, updateScheduleDate=:updateScheduleDate, queryText=:queryText,userID=:userID, useYN=:useYN, registDate=SYSTIMESTAMP, state='1' WHERE dbID=:dbID
admin.dbconnect.insertcolumn=INSERT INTO tm_connectdb_column(dbID, columnName, columnType, columnLength, columnDesc, registDate) VALUES(:dbID, :columnName, :columnType, :columnLength, :columnDesc, SYSTIMESTAMP)
admin.dbconnect.updatecolumn=UPDATE tm_connectdb_column SET columnType=:columnType, columnLength=:columnLength, columnDesc=:columnDesc, registDate=SYSTIMESTAMP WHERE dbID=:dbID AND columnName=:columnName
admin.dbconnect.deletecolumn=DELETE FROM tm_connectdb_column WHERE dbID=:dbID
admin.dbconnect.viewinfo=SELECT a.dbID, b.dbName, connectDBName,tableName,queryText,userID, updateType, updateValue, updateScheduleDate, hour(updateScheduleDate) updateScheduleHour, minute(updateScheduleDate) updateScheduleMinute, updateStartDate, updateEndDate, totalCount, registDate, state FROM tm_connectdb_info a INNER JOIN tm_dbset b ON a.dbID = b.dbID WHERE a.dbID=:dbID
admin.dbconnect.selectcolumn=SELECT dbID, columnName, columnType, columnLength, columnDesc, registDate FROM tm_connectdb_column WHERE dbID=:dbID
admin.dbconnect.getdbinfo=SELECT j.driverName, j.driverClass, d.dbURL, d.dbUserID, d.dbUserPWD, j.driverType FROM tm_dbset d INNER JOIN tm_jdbcset j 	ON d.driverID = j.driverID WHERE d.dbID = :dbID
admin.dbconnect.checkdbid=SELECT COUNT(*) FROM tm_connectdb_info WHERE dbID=:dbID
admin.dbconnect.getusetable=SELECT tableName FROM tm_connectdb_info WHERE dbID=:dbID
admin.dbconnect.selecthistoryinfo=SELECT dbID, tableName, min(registDate) updateStartDate, max(registDate) updateEndDate, max(state) state,  max(rs_count) as rs_count \
                                 FROM tm_connectdb_history \
                                 WHERE dbID =:dbID GROUP BY tableName 
admin.dbconnect.selecthistoryinfotail=for orderby_num() BETWEEN :start AND :countPerPage
admin.dbconnect.totalcounthistoryinfo=SELECT COUNT(*) FROM tm_connectdb_history 


