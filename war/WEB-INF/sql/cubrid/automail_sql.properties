###########################################################################
# 작성자 : 김유근 (coolang)
# 최초작성일 : 2007-10-24
# 용도 : admin 관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
automail.event.select=SELECT e.automailID, e.automailTitle, e.state, e.returnMail, e.replyMail, e.registDate, e.userID, u.userName, IFNULL(d.lastSendDate,'-' ) as lastSendDate  FROM tm_automail_event e INNER JOIN tm_users u ON e.userID = u.userID \
					  LEFT OUTER JOIN (SELECT automailID, max(registDate) as lastSendDate FROM tm_automail_sendresult group by automailID) d ON e.automailID = d.automailID 
automail.event.tail=\ ORDER BY  IFNULL(d.lastSendDate,'0' ) DESC  LIMIT :start , :count
automail.event.totalcount=SELECT COUNT(*) FROM tm_automail_event e INNER JOIN tm_users u ON e.userID = u.userID 
automail.event.insert=INSERT INTO tm_automail_event(automailTitle, userID, description, templateTitle, templateContent, templateSenderMail, templateSenderName, templateReceiverName, returnMail, replyMail, \
				encodingType, state, registDate) VALUES(:automailTitle, :userID, :description, :templateTitle, :templateContent, :templateSenderMail, \
				:templateSenderName, :templateReceiverName, :returnMail, :replyMail, :encodingType, :state, NOW())
automail.event.update=UPDATE tm_automail_event SET automailTitle=:automailTitle, description=:description, templateTitle=:templateTitle, templateContent=:templateContent, templateSenderMail=:templateSenderMail, \
				templateSenderName=:templateSenderName, templateReceiverName=:templateReceiverName, returnMail=:returnMail, replyMail=:replyMail,  \
				encodingType=:encodingType, state=:state, registDate=NOW() 	WHERE automailID=:automailID 
automail.event.view=SELECT automailID, automailTitle, userID, description, templateTitle, templateContent, templateSenderMail, templateSenderName, templateReceiverName, returnMail, replyMail, \
				 encodingType, state, registDate FROM tm_automail_event WHERE automailID=:automailID
automail.event.delete.event=DELETE FROM tm_automail_event WHERE automailID=:automailID		
automail.event.delete.sendqueue=DELETE FROM tm_automail_sendqueue WHERE automailID=:automailID
automail.event.delete.sendresult=DELETE FROM tm_automail_sendresult WHERE automailID=:automailID
automail.event.delete.statistic=DELETE FROM tm_automail_statistic WHERE automailID=:automailID 
automail.event.delete.domainstatistic=DELETE FROM tm_automail_domainstatistic WHERE automailID=:automailID
automail.event.delete.failstatistic=DELETE FROM tm_automail_failstatistic WHERE automailID=:automailID

########## 통계 #############

# 특정기간의 시간별 성공 합산
automail.statistic.hourly = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,9,2) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_automail_domainstatistic \
		WHERE automailID = :automailID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate \
		GROUP BY substring(sendTimeHour,9,2)	\
		) A
		
# 특정기간의 일자별 성공 합산
automail.statistic.daily = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,8) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_automail_domainstatistic \
		WHERE automailID = :automailID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate \
		GROUP BY substring(sendTimeHour,1,8)	\
		) A
		
# 특정기간의 월별 성공 합산
automail.statistic.monthly = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,6) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_automail_domainstatistic \
		WHERE automailID = :automailID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate \
		GROUP BY substring(sendTimeHour,1,6)	\
		) A
		
# 특정기간의 도메인별 성공 합산
automail.statistic.domain = \
	SELECT domainname, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT domainname, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_automail_domainstatistic \
		WHERE automailID = :automailID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate \
		GROUP BY domainname	\
		) A
# 특정기간의 실패원인별 통계
automail.statistic.failcause = \
	SELECT failcauseTypeName, failCount, failCauseType, failcauseCodeName, failcauseCode  \
	FROM ( \
		SELECT failcauseTypeName, IFNULL(SUM(failCount), 0) failCount, A.failCauseType, failcauseCodeName , A.failcauseCode \
		FROM  tm_smtp_failtype  A left outer join tm_automail_failstatistic B ON A.failcauseCode = B.failcauseCode \
		AND B.automailID = :automailID AND substring(B.sendTimeHour,1,8) BETWEEN :startDate AND :endDate  \
		GROUP BY A.failcauseCode	\
		) C

# 특정기간의 시도 총 갯수
automail.statistic.sendTotal = SELECT SUM(sendTotal) cnt FROM tm_automail_domainstatistic \
				WHERE automailID = :automailID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate

########## 통계 - 대상자 다운로드 #############
automail.statistic.porsonpreviewhourlytotal = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%H') = :key

automail.statistic.porsonpreviewhourlysuccess = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%H') = :key

automail.statistic.porsonpreviewhourlyfail = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%H') = :key

automail.statistic.porsonpreviewhourlyopen = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%H') = :key

automail.statistic.porsonpreviewdailytotal = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
              
automail.statistic.porsonpreviewdailysuccess = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

automail.statistic.porsonpreviewdailyfail = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

automail.statistic.porsonpreviewdailyopen = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
 
automail.statistic.porsonpreviewmonthlytotal = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m') = :key
                
automail.statistic.porsonpreviewmonthlysuccess = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

automail.statistic.porsonpreviewmonthlyfail = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

automail.statistic.porsonpreviewmonthlyopen = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

automail.statistic.porsonpreviewdomaintotal = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND domainName = :key

automail.statistic.porsonpreviewdomainsuccess = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND domainName = :key

automail.statistic.porsonpreviewdomainfail = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND domainName = :key

automail.statistic.porsonpreviewdomainopen = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND domainName = :key

automail.statistic.porsonpreviewfailcause = SELECT email, registDate, smtpCode, smtpMsg FROM tm_automail_sendresult \
                WHERE automailID = :automailID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND failCauseCode = :key
                
automail.statistic.porsonpreview.tail =\ LIMIT :start , :count
