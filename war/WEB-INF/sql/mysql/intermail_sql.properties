###########################################################################
# 작성자 : 김유근 
# 최초작성일 : 2010-10-09
# 용도 : admin 관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
intermail.write.getTotalCountInterMailEvent=SELECT COUNT(*) FROM tm_intermail_event e INNER JOIN tm_users u ON e.userID = u.userID
intermail.write.listInterMailEvents=SELECT e.intermailID, s.scheduleID, e.intermailTitle, e.userID, u.userName, s.state, e.templateFileName, e.registDate, s.sendType, e.repeatGroupType, s.resultYearMonth FROM tm_intermail_event e INNER JOIN tm_users u ON e.userID = u.userID INNER JOIN tm_intermail_schedule s ON e.intermailID=s.intermailID AND s.deleteYN='N'							
intermail.write.tail=\ ORDER BY  s.scheduleID, e.intermailID DESC LIMIT :start,:count
intermail.write.viewInterMailEvent=SELECT intermailID, intermailTitle, userID, description, templateTitle, templateContent, templateSenderMail, templateSenderName, templateReceiverName, \
								returnMail, encodingType, secretYN, fileKey, templateFileName, repeatGroupType, registDate FROM tm_intermail_event WHERE intermailID=:intermailID
intermail.write.selectInterMailSchedule=SELECT scheduleID, sendType, state, sendScheduleDate, hour(sendScheduleDate) sendScheduleDateHH, minute(sendScheduleDate) sendScheduleDateMM, sendStartTime, sendEndTime, retryStartTime, retryEndTime, retryCount, retryFinishYN, statisticEndDate,  hour(statisticEndDate) statisticEndDateHH, minute(statisticEndDate) statisticEndDateMM, registDate \
							FROM tm_intermail_schedule WHERE intermailID=:intermailID AND deleteYN='N'	
intermail.fileupload.info = SELECT fileKey, fileName FROM tm_intermail_file WHERE fileKey = :fileKey 
intermail.write.insertInterMailEvent=INSERT INTO tm_intermail_event(intermailTitle, userID, description, templateTitle, templateContent, templateSenderMail, templateSenderName, templateReceiverName, returnMail, encodingType, secretYN, fileKey, templateFileName, templateFileContent, repeatGroupType, registDate) \
						VALUES(:intermailTitle, :userID, :description, :templateTitle, :templateContent, :templateSenderMail, :templateSenderName, :templateReceiverName, :returnMail, :encodingType, :secretYN, :fileKey, :templateFileName, :templateFileContent, :repeatGroupType, NOW())
intermail.write.insertInterMailSchedule=INSERT INTO tm_intermail_schedule(intermailID, scheduleID, sendType, state, sendScheduleDate, statisticEndDate,  registDate) VALUES(:intermailID, :scheduleID, :sendType, :state, :sendScheduleDate,  :statisticEndDate,  NOW())
intermail.write.getMaxInterMailID=SELECT MAX(intermailID) intermailID FROM tm_intermail_event 
intermail.write.deleteInterMailSchedule=UPDATE tm_intermail_schedule SET deleteYN='Y' WHERE intermailID=:intermailID
intermail.write.insertFile=INSERT INTO tm_intermail_file(fileKey, fileName, registDate) VALUES(:fileKey, :fileName, NOW())
intermail.write.updateInterMailEvent=UPDATE tm_intermail_event SET intermailTitle=:intermailTitle, description=:description, templateTitle=:templateTitle, templateContent=:templateContent, templateSenderMail=:templateSenderMail, \
							templateSenderName=:templateSenderName, templateReceiverName=:templateReceiverName, returnMail=:returnMail, encodingType=:encodingType, secretYN=:secretYN, fileKey=:fileKey, templateFileName=:templateFileName, templateFileContent=:templateFileContent, repeatGroupType=:repeatGroupType \
							WHERE intermailID=:intermailID
intermail.write.updateInterMailSchedule=UPDATE tm_intermail_schedule SET sendType=:sendType, state=:state, sendScheduleDate=:sendScheduleDate, statisticEndDate=:statisticEndDate WHERE intermailID=:intermailID AND scheduleID=:scheduleID
intermail.write.deleteInterMailFailStatistic=DELETE FROM tm_intermail_failstatistic WHERE intermailID=:intermailID
intermail.write.deleteInterMailDomainStatistic=DELETE FROM tm_intermail_domainstatistic WHERE intermailID=:intermailID
intermail.write.updateSendState=UPDATE tm_intermail_schedule SET state=:state WHERE intermailID=:intermailID AND scheduleID=:scheduleID
intermail.write.getInterMailState=SELECT state FROM tm_intermail_schedule WHERE intermailID=:intermailID AND scheduleID=:scheduleID
intermail.write.createSendQueueTable=(sendNo INT NOT NULL AUTO_INCREMENT, \
							scheduleID	INT NOT NULL DEFAULT 1,\
							email VARCHAR(100) NOT NULL, \
							senderMail VARCHAR(100) NULL DEFAULT '', \
							senderName VARCHAR(50) NULL DEFAULT '', \
							receiverName VARCHAR(100) NULL DEFAULT '',\
							mailTitle VARCHAR(100) NULL,\
							mailContent LONGTEXT NULL, \
							mailURL VARCHAR(255) NULL, \
							onetooneInfo LONGTEXT NULL, \
							fileName VARCHAR(100) NULL, \
							fileContent LONGTEXT NULL, \
							customerID VARCHAR(50) NULL, \
							secretPWD VARCHAR(20) NULL DEFAULT '', \
							registDate DATETIME NOT NULL, \
							PRIMARY KEY(sendNo))
intermail.write.totalInterMailSendList=SELECT COUNT(*) FROM
intermail.write.selectInterMailSendList1=SELECT sendID, intermailID, scheduleID, email, domainName, mailTitle, fileName, registDate FROM
intermail.write.selectInterMailSendList2=\ LIMIT :start,:count
intermail.write.viewInterMailSend1=SELECT sendID, intermailID, scheduleID, email, domainName, senderMail, senderName, receiverName, mailTitle, mailContent, onetooneInfo, fileName, fileContent, repeatGroupType FROM 
intermail.write.viewInterMailSend2=\ WHERE sendID=:sendID AND intermailID=:intermailID AND scheduleID=:scheduleID
intermail.write.deleteSelectedInterMailSend1=DELETE FROM
intermail.write.deleteSelectedInterMailSend2=\ WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND sendID IN (
intermail.write.deleteAllInterMailSend=DELETE FROM
intermail.write.updateInterMailSendApprove=UPDATE tm_intermail_schedule SET state=:state WHERE intermailID=:intermailID AND scheduleID=:scheduleID

#통계설정
# 특정기간의 시간별 성공 합산
intermail.statistic.hourly = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,9,2) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_intermail_domainstatistic \
		WHERE intermailID = :intermailID AND scheduleID=:scheduleID AND substring(sendTimeHour,1,8) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,9,2)	\
		) A
# 특정기간의 일자별 성공 합산
intermail.statistic.daily = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,8) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_intermail_domainstatistic \
		WHERE intermailID = :intermailID AND scheduleID=:scheduleID AND substring(sendTimeHour,1,8) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,1,8)	\
		) A
# 특정기간의 월별 성공 합산
intermail.statistic.monthly = \
	SELECT standard, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,6) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_intermail_domainstatistic \
		WHERE  intermailID = :intermailID AND scheduleID=:scheduleID AND substring(sendTimeHour,1,4) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,1,6)	\
		) A
		
# 특정기간의 도메인별 성공 합산
intermail.statistic.domain = \
	SELECT domainname, sendTotal, successTotal, failTotal, openTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT domainname, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(openTotal)   openTotal  \
		FROM tm_intermail_domainstatistic \
		WHERE  intermailID = :intermailID AND scheduleID=:scheduleID AND substring(sendTimeHour,1,8) LIKE :checkDate  \
		GROUP BY domainname	ORDER BY SUM(sendTotal) DESC LIMIT 20 \
		) A
# 특정기간의 실패원인별 통계
intermail.statistic.failcause = \
	SELECT failcauseTypeName, failCount, failCauseType, failcauseCodeName, failcauseCode  \
	FROM ( \
		SELECT failcauseTypeName, IFNULL(SUM(failCount), 0) failCount, A.failCauseType, failcauseCodeName , A.failcauseCode \
		FROM  tm_smtp_failtype  A left outer join tm_intermail_failstatistic B ON A.failcauseCode = B.failcauseCode \
		AND B.intermailID = :intermailID AND B.scheduleID=:scheduleID AND substring(B.sendTimeHour,1,8) LIKE :checkDate  \
		GROUP BY A.failcauseCode	\
		) C
# 특정기간의 시도 총 갯수
intermail.statistic.sendTotal = SELECT SUM(sendTotal) cnt FROM tm_intermail_domainstatistic \
				WHERE intermailID = :intermailID AND scheduleID=:scheduleID  AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate

########## 통계 - 대상자 다운로드 #############
intermail.statistic.porsonpreviewselect=SELECT email, registDate, smtpCode, smtpMsg FROM 

intermail.statistic.porsonpreviewhourlytotal = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%H') = :key

intermail.statistic.porsonpreviewhourlysuccess = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%H') = :key

intermail.statistic.porsonpreviewhourlyfail = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%H') = :key

intermail.statistic.porsonpreviewhourlyopen = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%H') = :key

intermail.statistic.porsonpreviewdailytotal = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
              
intermail.statistic.porsonpreviewdailysuccess = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

intermail.statistic.porsonpreviewdailyfail = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

intermail.statistic.porsonpreviewdailyopen = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
 
intermail.statistic.porsonpreviewmonthlytotal = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m') = :key
                
intermail.statistic.porsonpreviewmonthlysuccess = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

intermail.statistic.porsonpreviewmonthlyfail = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

intermail.statistic.porsonpreviewmonthlyopen = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

intermail.statistic.porsonpreviewdomaintotal = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND domainName = :key

intermail.statistic.porsonpreviewdomainsuccess = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType=0 \
                AND domainName = :key

intermail.statistic.porsonpreviewdomainfail = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smtpCodeType > 0 \
                AND domainName = :key

intermail.statistic.porsonpreviewdomainopen = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
				AND openYN='Y' \
                AND domainName = :key

intermail.statistic.porsonpreviewfailcause = WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND failCauseCode = :key
                
intermail.statistic.porsonpreview.tail =\ LIMIT :start , :count
intermail.statistic.porsonpreviewtotal = select count(*) FROM
intermail.statsitic.selectInterMailHistory1=SELECT r.sendID, r.email, e.intermailTitle, r.intermailID, r.scheduleID, r.mailTitle, r.fileName, r.smtpCodeType, r.smtpCode, r.smtpMsg, r.failCauseCode, r.retrySendCount, r.retryLastDate, r.openYN, \
							r.openDate, r.openFileYN, r.openFileDate, r.registDate, f.failCauseCodeName, s.state, s.retryFinishYN, s.retryCount, s.statisticEndDate FROM 
intermail.statsitic.selectInterMailHistory2=\ INNER JOIN tm_smtp_failtype f ON r.failCauseCode=f.failCauseCode INNER JOIN tm_intermail_schedule s ON r.intermailID=s.intermailID AND r.scheduleID=s.scheduleID \
							INNER JOIN tm_intermail_event e ON r.intermailID=e.intermailID WHERE 1=1 
intermail.statsitic.selectInterMailHistoryTail=\ ORDER BY r.registDate DESC LIMIT :start, :count
intermail.statsitic.viewInterMailSendResult1=SELECT sendID, intermailID, scheduleID, email, domainName, senderMail, senderName, receiverName, mailTitle, mailContent, onetooneInfo, fileName, fileContent, repeatGroupType FROM 
intermail.statsitic.viewInterMailSendResult2=\ WHERE sendID=:sendID AND intermailID=:intermailID AND scheduleID=:scheduleID
intermail.statsitic.updateInterMailScheduleRetryState=UPDATE tm_intermail_schedule SET retryFinishYN=:retryFinishYN WHERE intermailID=:intermailID AND scheduleID=:scheduleID
intermail.statistic.updateInterMailResultRetryState=\ SET wasRetrySended=:wasRetrySended WHERE sendID=:sendID AND intermailID=:intermailID AND scheduleID=:scheduleID
intermail.statistic.totaltInterMailHistory=SELECT COUNT(*) FROM 
intermail.statistic.updateRetryFinishSet=UPDATE tm_intermail_schedule SET retryFinishYN=:retryFinishYN WHERE intermailID=:intermailID AND scheduleID=:scheduleID
intermail.statistic.updateWasRetrySendedAllFailed=\ SET wasRetrySended=:wasRetrySended WHERE intermailID=:intermailID AND scheduleID=:scheduleID AND smtpCodeType IN('1','3')
intermail.statistic.updateWasRetrySendedCheckedFailedBatch=\ SET wasRetrySended=:wasRetrySended WHERE sendID=:sendID AND intermailID=:intermailID AND scheduleID=:scheduleID 
intermail.statistic.checkRetryFinishYN=SELECT retryFinishYN FROM tm_intermail_schedule WHERE intermailID=:intermailID AND scheduleID=:scheduleID