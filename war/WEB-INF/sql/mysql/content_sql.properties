###########################################################################
# 작성자 : 김유근 (coolang)
# 최초작성일 : 2007-10-24
# 용도 : contents 관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
#전체사용자
content.mailtemplate.select=SELECT t.templateID, t.templateName, t.shareGroupID, t.userID, u.userName, t.useYN, t.registDate, t.templateType, g.groupName FROM tm_massmail_templates t LEFT OUTER JOIN tm_usergroup g ON t.shareGroupID=g.groupID \
					INNER JOIN tm_users u ON u.userID=t.userID  WHERE 1=1 
#그룹관리자
content.mailtemplate.selectbygroup= \ AND ( (t.shareGroupID='ALL') OR (t.shareGroupID=:groupID) OR (t.shareGroupID='NOT' AND u.groupID=:groupID) )
#일반사용자
content.mailtemplate.selectbyuser= \ AND ((t.shareGroupID='ALL') OR (t.shareGroupID=:groupID) OR (t.shareGroupID='NOT' AND u.userID=:userID) )

content.mailtemplate.tail=\ ORDER BY registDate DESC LIMIT :start, :countPerPage
content.mailtemplate.selectcount=SELECT COUNT(*) FROM tm_massmail_templates t LEFT OUTER JOIN tm_usergroup g ON t.shareGroupID=g.groupID INNER JOIN tm_users u ON u.userID=t.userID \
					  WHERE 1=1 
content.mailtemplate.insert=INSERT INTO tm_massmail_templates(templateName, templateContent, shareGroupID, userID, useYN, registDate, templateType) \
				VALUES(:templateName, :templateContent, :shareGroupID, :userID, :useYN, NOW(), :templateType)
content.mailtemplate.update=UPDATE tm_massmail_templates SET templateName=:templateName, templateContent=:templateContent, shareGroupID=:shareGroupID, userID=:userID, useYN=:useYN, registDate=NOW(), templateType=:templateType \
					WHERE templateID=:templateID
content.mailtemplate.delete=DELETE FROM tm_massmail_templates WHERE templateID=:templateID
content.mailtemplate.view=SELECT t.templateID, t.templateName, t.templateContent, t.shareGroupID, t.userID, t.useYN, t.registDate, t.templateType, g.groupName FROM tm_massmail_templates t LEFT OUTER JOIN tm_usergroup g ON t.shareGroupID=g.groupID WHERE t.templateID=:templateID

#테스터관리
content.tester.select=SELECT t.testerID, t.testerName, t.testerEmail, t.testerHp, t.userID, t.registDate, u.userName FROM tm_massmail_tester t left join tm_users u on t.userID=u.userID WHERE 1=1 
content.tester.tail=\ ORDER BY testerName LIMIT :start , :countPerPage
content.tester.view=SELECT testerID, testerName, testerEmail, testerHp, userID, registDate FROM tm_massmail_tester WHERE testerID=:testerID
content.tester.insert=INSERT INTO tm_massmail_tester(testerName, testerEmail, testerHp, userID, registDate) values(:testerName, :testerEmail, :testerHp, :userID, NOW())
content.tester.update=UPDATE tm_massmail_tester SET testerName=:testerName, testerEmail=:testerEmail, testerHp=:testerHp, registDate=NOW() WHERE testerID=:testerID
content.tester.delete=DELETE FROM tm_massmail_tester WHERE testerID IN(
content.tester.check=SELECT COUNT(*) FROM tm_massmail_tester WHERE userID=:userID
content.tester.totalcount=SELECT COUNT(*) FROM tm_massmail_tester t left join tm_users u on t.userID=u.userID WHERE 1=1


#설문관리
content.poll.selectPollInfoList=SELECT p.pollID, p.pollTitle, p.shareGroupID, p.userID, u.userName,  p.useYN, p.resultFinishYN, p.registDate, g.groupName, p.codeID, p.codeNo, p.pollTemplateID, p.pollEndDate,  p.pollEndType, p.aimanswercnt \
							FROM tm_poll_info p INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE 1=1 
#그룹관리자
content.poll.selectbygroup=\ AND ( (p.shareGroupID='ALL') OR (p.shareGroupID=:groupID) OR (p.shareGroupID='NOT' AND u.groupID=:groupID) )
#일반사용자
content.poll.selectbyuser=\ AND ((p.shareGroupID='ALL') OR (p.shareGroupID=:groupID) OR (p.shareGroupID='NOT' AND u.userID=:userID) )							
content.poll.tail=\ order by p.registDate desc LIMIT :start , :count	

content.poll.selectPollCount=SELECT COUNT(*) FROM tm_poll_info p INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE 1=1 
content.poll.insertPollInfo=INSERT INTO tm_poll_info(pollTitle, description,  shareGroupID, userID, codeID, codeNo, useYN, pollTemplateID, resultFinishYN, pollEndDate, registDate, pollEndType, aimanswercnt) VALUES(:pollTitle, :description, :shareGroupID, :userID,  :codeID, :codeNo, :useYN, :pollTemplateID, 'N', :pollEndDate, NOW(), :pollEndType, :aimanswercnt)
content.poll.updatePollInfo=UPDATE tm_poll_info SET pollTitle=:pollTitle, description=:description, shareGroupID=:shareGroupID, userID=:userID,  codeID=:codeID, codeNo=:codeNo, \
							useYN=:useYN, resultFinishYN=:resultFinishYN, pollEndDate=:pollEndDate, registDate=NOW(), pollEndType=:pollEndType, aimanswercnt=:aimanswercnt WHERE pollID=:pollID
content.poll.insertPollQuestion=INSERT INTO tm_poll_question(pollID, questionID, questionType, questionHead, questionNo, questionText, exampleType, exampleGubun, exampleMultiCount, requiredYN, examplePosition, matrixTextSize, registDate, fileURL, layoutType) \
								VALUES(:pollID, :questionID, :questionType, :questionHead, :questionNo, :questionText, :exampleType, :exampleGubun, :exampleMultiCount, :requiredYN,:examplePosition, :matrixTextSize, NOW(), :fileURL, :layoutType)							
content.poll.updatePollQuestion=UPDATE tm_poll_question SET questionType=:questionType, questionHead=:questionHead, questionText=:questionText, exampleType=:exampleType, \
					exampleGubun=:exampleGubun, exampleMultiCount=:exampleMultiCount, requiredYN=:requiredYN, examplePosition=:examplePosition, matrixTextSize=:matrixTextSize, registDate=NOW(), fileURL=:fileURL, layoutType=:layoutType  WHERE pollID=:pollID AND questionID=:questionID
content.poll.selectPollCode=SELECT codeNo, codeName, codeDesc FROM tm_poll_code WHERE codeID=:codeID
content.poll.viewPollInfo=SELECT p.pollID, p.pollTitle, p.description, p.shareGroupID, p.userID, u.userName, p.useYN, p.pollTemplateID, p.resultPollHTML, p. defaultPollHTML, p.pollEndDate, hour(p.pollEndDate) pollEndDateHH, minute(p.pollEndDate) pollEndDateMM, p.registDate, g.groupName, p.codeID, p.codeNo, p.startTitle, p.endTitle, p.resultFinishYN, p.pollEndType, p.aimanswercnt \
					FROM tm_poll_info p INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE p.pollID=:pollID
content.poll.getMaxPollID=SELECT MAX(pollID) pollID FROM tm_poll_info 
content.poll.selectPollCodeType=SELECT codeID, codeName FROM tm_poll_code WHERE codeType='2' AND useYN='Y' GROUP BY codeID, codeName ORDER BY codeID
content.poll.getMaxQuestionID=SELECT (IFNULL(MAX(questionID),0)+1) questionID FROM tm_poll_question WHERE pollID=:pollID
content.poll.insertPollExample=INSERT INTO tm_poll_example(pollID, questionID, exampleID, matrixXY, exampleDesc, exampleExYN, goToQuestionNo, registDate, fileURL, layoutType, noResponseStart, noResponseEnd) VALUES(:pollID, :questionID, :exampleID, :matrixXY, :exampleDesc, :exampleExYN, :goToQuestionNo, NOW(), :fileURL, :layoutType, :noResponseStart, :noResponseEnd)
content.poll.viewStartEndTitle=SELECT startTitle, endTitle FROM tm_poll_info WHERE pollID=:pollID

#설문템플릿
content.poll.selectPollTemplate=SELECT p.pollTemplateID, p.pollTemplateTitle, p.pollTemplateHTML, p.shareGroupID, p.registDate, p.userID, p.useYN, u.userName, g.groupName FROM tm_poll_template p \
						INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE 1=1
content.poll.insertPollTemplate=INSERT INTO tm_poll_template(pollTemplateTitle, pollTemplateHTML, userID, shareGroupID, useYN, registDate) VALUES(:pollTemplateTitle,:pollTemplateHTML,:userID,:shareGroupID, :useYN, NOW())
content.poll.updatePollTemplate=UPDATE tm_poll_template SET pollTemplateTitle=:pollTemplateTitle, pollTemplateHTML=:pollTemplateHTML, userID=:userID, shareGroupID=:shareGroupID, useYN=:useYN, registDate=NOW() WHERE pollTemplateID=:pollTemplateID
content.poll.deletePollTemplate=DELETE FROM tm_poll_template WHERE pollTemplateID = :pollTemplateID
content.poll.showTemplateHTML=SELECT pollTemplateHTML FROM tm_poll_template WHERE pollTemplateID = :pollTemplateID

#그룹관리자
content.poll.selectTemplatebygroup=\ AND ( (p.shareGroupID='ALL') OR (p.shareGroupID=:groupID) OR (p.shareGroupID='NOT' AND u.groupID=:groupID) )
#일반사용자
content.poll.selectTemplatebyuser=\ AND ((p.shareGroupID='ALL') OR (p.shareGroupID=:groupID) OR (p.shareGroupID='NOT' AND u.userID=:userID) )
content.poll.selectPollTemplateCount=SELECT COUNT(*) FROM tm_poll_template p INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE 1=1
content.poll.pollTemplateTail=\ order by p.registDate desc LIMIT :start , :count	
content.poll.viewPollTemplate=SELECT p.pollTemplateID, p.pollTemplateTitle, p.pollTemplateHTML, p.shareGroupID, p.userID, p.useYN, p.registDate, g.groupName FROM tm_poll_template p LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID=g.groupID WHERE p.pollTemplateID=:pollTemplateID
#설문문항보기
content.poll.viewPollQuestion=SELECT pollID, questionID, questionNo, questionType, questionHead, questionText, exampleType, exampleGubun, exampleMultiCount, exampleMultiminimumCount, examplePosition, requiredYN, matrixTextSize, fileURL, layoutType FROM tm_poll_question WHERE pollID=:pollID AND questionID=:questionID
content.poll.getPollQuestionNumber=SELECT questionID, questionNo FROM tm_poll_question WHERE pollID=:pollID ORDER BY questionNo
content.poll.updateDefaultResultPollHTML=UPDATE tm_poll_info SET defaultPollHTML=:defaultPollHTML, resultPollHTML=:resultPollHTML WHERE pollID=:pollID

content.poll.showResultDefaultPollHTML=SELECT resultPollHTML, defaultPollHTML FROM tm_poll_info WHERE pollID=:pollID
content.poll.checkPoll=SELECT COUNT(*) FROM tm_massmail_mail WHERE pollID=:pollID
content.poll.selectPollExample=SELECT e.exampleID, e.questionID, e.exampleDesc, e.exampleExYN, e.goToQuestionNo, e.fileURL, e.layoutType, e.noResponseStart, e.noResponseEnd  FROM tm_poll_example e INNER JOIN tm_poll_question q \
					ON e.pollID=q.pollID AND e.questionID=q.questionID WHERE e.pollID=:pollID AND q.questionID=:questionID AND q.questionType=:questionType AND e.matrixXY=:matrixXY
#설문삭제
content.poll.deletePollExample=DELETE FROM tm_poll_example WHERE pollID=:pollID
content.poll.deletePollQuestionAll=DELETE FROM tm_poll_question WHERE pollID=:pollID
content.poll.deletePollQuestion=DELETE FROM tm_poll_question WHERE pollID=:pollID AND questionID=:questionID
content.poll.deletePollInfo=DELETE FROM tm_poll_info WHERE pollID=:pollID
content.poll.deleteExampleQuestion=DELETE FROM tm_poll_example WHERE pollID=:pollID AND questionID=:questionID
content.poll.updateResultPollHTMLToDefault=UPDATE tm_poll_info SET resultPollHTML=defaultPollHTML, resultFinishYN='N' WHERE pollID=:pollID
content.poll.updateResultPollHTMLToFinish=UPDATE tm_poll_info SET resultPollHTML=:resultPollHTML WHERE pollID=:pollID
content.poll.updateQuestionNumAfterDelete=UPDATE tm_poll_question SET questionNo=questionNo-1 WHERE pollID=:pollID AND questionNo>:questionNo
content.poll.updateQuestionNumAfterAdd=UPDATE tm_poll_question SET questionNo=questionNo+1 WHERE pollID=:pollID AND questionNo>:questionNo
content.poll.getQuestionCount=SELECT COUNT(*) FROM tm_poll_question WHERE pollID=:pollID
content.poll.getQuestionIDByNo=SELECT questionID, questionType FROM tm_poll_question WHERE pollID=:pollID AND questionNo=:questionNo
content.poll.updateQuestionNo=UPDATE tm_poll_question SET questionNo=:questionNo WHERE pollID=:pollID AND questionID=:questionID
content.poll.selectQuestionNo=SELECT questionID,questionNo FROM tm_poll_question WHERE pollID=:pollID AND questionNo>:questionNoFrom AND questionNo<:questionNoTo ORDER BY questionNo
#대량메일에서 설문리스트
content.poll.selectPollList=SELECT p.pollID, p.pollTitle, p.userID, u.userName, p.registDate, p.resultPollHTML, p.pollEndDate \
							FROM tm_poll_info p INNER JOIN tm_users u ON p.userID = u.userID LEFT OUTER JOIN tm_usergroup g ON p.shareGroupID = g.groupID WHERE p.useYN='Y' AND p.resultFinishYN='Y' AND p.pollEndDate>:nowDate 
content.poll.selectPollListTail=ORDER BY p.registDate DESC 
content.poll.checkPollMassMail=SELECT COUNT(*) FROM tm_massmail_mail WHERE massmailID=:massmailID AND pollID=:pollID
#설문번호
content.poll.selQuestion=SELECT questionID, questionNo FROM tm_poll_question WHERE pollID=:pollID ORDER BY questionNo
#설문보기
content.poll.selExample=SELECT matrixXY, exampleID FROM tm_poll_example WHERE pollID=:pollID AND questionID=:questionID AND matrixXY=:matrixXY ORDER BY exampleID
#응답입력 
content.poll.insertPollAnswer=INSERT INTO tm_poll_answer(massmailID, scheduleID, sendID, pollID, questionID, exampleID, matrixX, matrixY, email, responseText, registDate, ranking) VALUES(:massmailID, :scheduleID, :sendID, :pollID, :questionID, :exampleID, :matrixX, :matrixY, :email, :responseText, NOW(), :ranking)
content.poll.checkPollAnswer=SELECT COUNT(*) FROM tm_poll_answer WHERE pollID=:pollID AND massmailID=:massmailID AND scheduleID=:scheduleID AND sendID=:sendID AND email=:email
content.poll.checkStatisticExpiredMassmail=SELECT COUNT(*)  FROM tm_massmail_schedule WHERE massmailID=:massmailID AND scheduleID=:scheduleID AND statisticsEndDate>:nowDate
content.poll.checkUsingPoll=SELECT COUNT(*) FROM tm_massmail_mail WHERE pollID=:pollID
content.poll.selectPollCodeList=SELECT codeID, codeNo, codeName, codeDesc, useYN, codeType  FROM tm_poll_code WHERE 1=1
content.poll.selectPollCodeListTail=\ ORDER BY codeID, codeNo 
content.poll.insertPollCode=INSERT INTO tm_poll_code(codeID, codeNo, codeName, codeDesc, useYN, codeType) VALUES(:codeID, :codeNo, :codeName, :codeDesc, :useYN, :codeType)
content.poll.deletePollCode=DELETE FROM tm_poll_code WHERE codeID=:codeID
content.poll.getMaxPollCodeID=SELECT (MAX(codeID)+1) maxCode FROM tm_poll_code
content.poll.insertCopyPollQuestion=INSERT INTO tm_poll_question SELECT :newPollID, questionID, questionNo, questionType, questionHead, questionText,\
					 exampleType, exampleGubun, exampleMultiCount, requiredYN, examplePosition, matrixTextSize, NOW(), fileURL, layoutType, exampleMultiMinimumCount FROM tm_poll_question WHERE pollID=:oldPollID
content.poll.insertCopyPollExample=INSERT INTO tm_poll_example SELECT :newPollID ,questionID, exampleID, matrixXY, exampleDesc, exampleExYN, goToQuestionNo,NOW(), fileUrl, layoutType, noResponseStart, noResponseEnd  FROM tm_poll_example WHERE pollID=:oldPollID
content.poll.updateCopyPollInfo=UPDATE tm_poll_info a, (SELECT startTitle, endTitle, resultPollHTML, defaultPollHTML FROM tm_poll_info WHERE pollID=:oldPollID) b \
				SET a.startTitle=b.startTitle, a.endTitle=b.endTitle, a.resultPollHTML=b.resultPollHTML, a.defaultPollHTML=b.defaultPollHTML WHERE a.pollID=:newPollID		
content.poll.deletePollAnswer=DELETE FROM tm_poll_answer WHERE massmailID=:massmailID AND scheduleID=:scheduleID AND pollID=:pollID AND sendID=:sendID AND email=:email
content.poll.checkPollEndDate=SELECT COUNT(*)  FROM tm_poll_info WHERE pollID=:pollID AND  pollEndDate<=:nowDate
content.poll.checkPollAimAnswerCnt=SELECT COUNT(*)  FROM tm_poll_info WHERE pollID=:pollID AND  aimAnswerCnt<=:aimAnswerCnt
content.poll.updatePollEndDate=UPDATE tm_poll_info SET pollEndDate=:pollEndDate, pollEndType=:pollEndType, aimAnswerCnt=:aimAnswerCnt WHERE pollID=:pollID
content.poll.copyQuestionList=SELECT pollID, questionID, questionNo, questionType, questionHead ,questionText, exampleType, exampleGubun, exampleMultiCount, exampleMultiMinimumCount, requiredYN, examplePosition, fileURL, layoutType FROM tm_poll_question WHERE questionText like :questionText
content.poll.selSingularQuestion=SELECT questionID, questionNO, questionText, questionType, exampleType, examplegubun FROM tm_poll_question WHERE pollID=:pollID
content.poll.updatePollSkipPattern=UPDATE tm_poll_example SET goToQuestionNo=:goToQuestionNo, noResponseStart=:noResponseStart, noResponseEnd=:noResponseEnd \
								WHERE pollID=:pollID AND questionID=:questionID AND exampleID=:exampleID 
								
								
#각 설문템플릿의 수정 권한 설정
content.poll.selectUserID=SELECT userID FROM tm_poll_info WHERE pollID=:pollID
content.poll.selectGroupID=SELECT groupID FROM tm_users WHERE userID=:userID

#해당 대량메일의 설문에 응답한 인원 수 출력
content.poll.selectPollResponseCnt=SELECT COUNT(DISTINCT sendID) responseCount FROM tm_poll_answer WHERE pollID=:pollID AND massmailID=:massmailID AND scheduleID=:scheduleID