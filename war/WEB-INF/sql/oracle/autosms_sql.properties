###########################################################################
# 작성자 : 김유근 (coolang)
# 최초작성일 : 2007-10-24
# 용도 : admin 관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
autosms.event.select=SELECT e.autosmsID, e.autosmsTitle, e.state, e.templateSenderPhone, e.registDate, e.userID, u.userName FROM tm_autosms_event e INNER JOIN tm_users u ON e.userID = u.userID 
autosms.event.tail=order by e.autosmsID DESC LIMIT :start , :count
autosms.event.totalcount=SELECT COUNT(*) FROM tm_autosms_event e INNER JOIN tm_users u ON e.userID = u.userID 
autosms.event.view=SELECT e.autosmsID, e.autosmsTitle, e.description, e.templateSenderPhone, e.templateMsg, e.state, e.registDate, e.userID, u.userName FROM tm_autosms_event e INNER JOIN tm_users u ON e.userID = u.userID WHERE e.autosmsID=:autosmsID
autosms.event.insert=INSERT INTO tm_autosms_event(autosmsTitle, userID, description, templateSenderPhone, templateMsg, state, registDate) VALUES(:autosmsTitle, :userID, :description, :templateSenderPhone, :templateMsg, :state, NOW())
autosms.event.update=UPDATE tm_autosms_event SET autosmsTitle=:autosmsTitle, userID=:userID, description=:description, templateSenderPhone=:templateSenderPhone, templateMsg=:templateMsg, state=:state WHERE autosmsID=:autosmsID
autosms.event.delete=DELETE FROM tm_autosms_event WHERE autosmsID=:autosmsID
autosms.event.deleteQueue=DELETE FROM tm_autosms_sendqueue WHERE autosmsID=:autosmsID
autosms.event.deleteStatistic=DELETE FROM tm_autosms_statistic WHERE autosmsID=:autosmsID

#통계
# 특정기간의 시간별 성공 합산
autosms.statistic.hourly = \
	SELECT standard, sendTotal, successTotal, failTotal, readyTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,9,2) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(readyTotal)   readyTotal  \
		FROM tm_autosms_statistic \
		WHERE autosmsID = :autosmsID AND substring(sendTimeHour,1,8) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,9,2)	\
		) A
		
# 특정기간의 일자별 성공 합산
autosms.statistic.daily = \
	SELECT standard, sendTotal, successTotal, failTotal, readyTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,8) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(readyTotal)   readyTotal  \
		FROM tm_autosms_statistic \
		WHERE autosmsID = :autosmsID AND substring(sendTimeHour,1,8) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,1,8)	\
		) A
		
# 특정기간의 월별 성공 합산
autosms.statistic.monthly = \
	SELECT standard, sendTotal, successTotal, failTotal, readyTotal, \
		CASE successTotal WHEN 0 THEN 0	\
		ELSE (successTotal / sendTotal) * 100 END successRatio \
	FROM ( \
		SELECT substring(sendTimeHour,1,6) standard, SUM(sendTotal) sendTotal, \
			SUM(successTotal) successTotal , SUM(failTotal)    failTotal,    \
			SUM(readyTotal)   readyTotal  \
		FROM tm_autosms_statistic \
		WHERE autosmsID = :autosmsID AND substring(sendTimeHour,1,4) LIKE :checkDate \
		GROUP BY substring(sendTimeHour,1,6)	\
		) A

# 특정기간의 시도 총 갯수
autosms.statistic.sendTotal = SELECT SUM(sendTotal) cnt FROM tm_autosms_statistic \
				WHERE autosmsID = :autosmsID AND substring(sendTimeHour,1,8) BETWEEN :startDate AND :endDate

########## 통계 - 대상자 다운로드 #############
autosms.statistic.porsonpreviewselect=SELECT receiverPhone, registDate, smsCode, smsCodeMsg FROM 

autosms.statistic.porsonpreviewhourlytotal = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%H') = :key

autosms.statistic.porsonpreviewhourlysuccess = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='0' \
                AND DATE_FORMAT(registDate, '%H') = :key

autosms.statistic.porsonpreviewhourlyfail = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='2' \
                AND DATE_FORMAT(registDate, '%H') = :key

autosms.statistic.porsonpreviewhourlyready = WHERE autosmsID = :autosmsID AND  registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
		AND smsCodeType='0' \
                AND DATE_FORMAT(registDate, '%H') = :key

autosms.statistic.porsonpreviewdailytotal = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
              
autosms.statistic.porsonpreviewdailysuccess = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='1' \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

autosms.statistic.porsonpreviewdailyfail = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='2' \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key

autosms.statistic.porsonpreviewdailyready = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
		AND smsCodeType='0' \
                AND DATE_FORMAT(registDate, '%Y%m%d') = :key
 
autosms.statistic.porsonpreviewmonthlytotal = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND DATE_FORMAT(registDate, '%Y%m') = :key
                
autosms.statistic.porsonpreviewmonthlysuccess = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='1' \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

autosms.statistic.porsonpreviewmonthlyfail = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
                AND smsCodeType='2' \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

autosms.statistic.porsonpreviewmonthlyready = WHERE autosmsID = :autosmsID AND registDate BETWEEN cast( :startDate as datetime ) AND cast( :endDate as datetime ) \
		AND smsCodeType='0' \
                AND DATE_FORMAT(registDate, '%Y%m') = :key

                
autosms.statistic.porsonpreview.tail =\ LIMIT :start , :count

autosms.statistic.porsonpreviewtotal = select count(*) FROM


autosms.api.insert = insert into tm_autosms_sendqueue(autosmsID, senderPhone, receiverPhone, smsMsg, msgType, onetooneInfo, registDate ) \
		     values(:autosmsID, :senderPhone, :receiverPhone, :smsMsg, :msgType, :onetooneInfo, now() ) 