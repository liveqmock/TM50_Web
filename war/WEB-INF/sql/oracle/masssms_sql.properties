###########################################################################
# 작성자 : 김유근
# 최초작성일 : 2008-03-04
# 용도 : 대상자  관련 쿼리 정보 (반드시 어드민에 관련된 쿼리만 입력해야 함!)
# 작성 : 메인패키지명.서브패키지명.쿼리용도
# ex) : bixon.web.admin 패키지안에 board패키지안에 사용되는 insert용도의 쿼리문이라면 아래처럼 구현한다.
# admin.board.insert=insert into board(title,content) values(?,?)
# 경고 : 반드시 SQL문은 ANSI SQL문으로 작성할 것!!!
###########################################################################
masssms.write.getBackupDate=SELECT backupYearMonth FROM tm_masssms_backupdate
masssms.write.listTesterHp=SELECT testerHp, testerName FROM tm_massmail_tester WHERE userID=:userID
masssms.write.insertMassSMSInfo=INSERT INTO tm_masssms_info(masssmsTitle,description,userID,sendType, statisticsOpenType,repeatSendType, repeatSendStartDate, repeatSendEndDate, repeatSendDay,repeatSendWeek,approveUserID,memo,priority,registDate) \
						VALUES(:masssmsTitle, :description, :userID, :sendType, :statisticsOpenType, :repeatSendType, :repeatSendStartDate, :repeatSendEndDate, :repeatSendDay, :repeatSendWeek, :approveUserID, :memo,:priority, NOW())						
						
#가장최근에 입력된 masssmsID 가져온다.
masssms.write.getMassSMSIDInfo=SELECT MAX(masssmsID) masssmsID FROM tm_masssms_info 
#대상그룹입력
masssms.write.insertMassSMSTargetGroup=INSERT INTO tm_masssms_targetgroup(masssmsID, targetID, targetName, targetType, dbID, queryText, targetCount, exceptYN, registDate) \
						SELECT :masssmsID, targetID, targetName, targetType, dbID, queryText, targetCount, :exceptYN, NOW() FROM tm_target_list WHERE targetID=:targetID
masssms.write.expectTargetTotalCount=SELECT SUM(targetCount) FROM tm_masssms_targetgroup WHERE masssmsID=:masssmsID
#스케줄입력
masssms.write.insertMassSMSSchedule=INSERT INTO tm_masssms_schedule(masssmsID, scheduleID, sendScheduleDate, statisticsEndDate, state, targetTotalCount, registDate) VALUES(:masssmsID, :scheduleID, :sendScheduleDate, :statisticsEndDate, :state, :targetTotalCount, NOW())
#필터링입력
masssms.write.insertMassSMSFilterSet=INSERT INTO tm_masssms_filterset(masssmsID, sendedType, sendedYear, sendedMonth, sendedCount, rejectType, registDate) \
				VALUES(:masssmsID, :sendedType, :sendedYear, :sendedMonth, :sendedCount, :rejectType, NOW())
masssms.write.insertMassSMSSMS=INSERT INTO tm_masssms_sms(masssmsID, senderPhone, msgType, smsMsg, registDate) VALUES(:masssmsID, :senderPhone, :msgType, :smsMsg, NOW())
 #기본정보삭제
masssms.write.deleteMassSMSInfo=DELETE FROM tm_masssms_info WHERE masssmsID=:masssmsID
#대상그룹삭제 
masssms.write.deleteMassSMSTargetGroup=DELETE FROM tm_masssms_targetgroup WHERE masssmsID=:masssmsID
#필터설정삭제
masssms.write.deleteMassSMSFilterSet=DELETE FROM tm_masssms_filterset WHERE masssmsID=:masssmsID
masssms.write.deleteMassSMSSMS=DELETE FROM tm_masssms_sms WHERE masssmsID=:masssmsID
masssms.write.getUserInfo=SELECT userName, email FROM tm_users u WHERE u.userID = :userID
#시스템메일입력 
masssms.insert.insertSystemNotify=INSERT INTO tm_system_notify(notifyFlag, notifyType, userID, senderPhone, receiverPhone, smsContent, registDate) \
				VALUES(:notifyFlag, :notifyType, :userID, :senderPhone, :receiverPhone,  :smsContent, NOW())
masssms.write.updateMassSMSInfo=UPDATE tm_masssms_info SET masssmsTitle=:masssmsTitle,description=:description,modifyUserID=:modifyUserID,modifyDate=NOW(), sendType=:sendType, \
						statisticsOpenType=:statisticsOpenType,repeatSendType=:repeatSendType, repeatSendDay=:repeatSendDay,repeatSendWeek=:repeatSendWeek, \
						approveUserID=:approveUserID,memo=:memo,priority=:priority  WHERE masssmsID=:masssmsID			
#스케줄삭제
masssms.write.deleteMassSMSSchedule=DELETE FROM tm_masssms_schedule WHERE masssmsID=:masssmsID
masssms.write.updateMassSMSFilterSet=UPDATE tm_masssms_filterset SET sendedType=:sendedType, sendedYear=:sendedYear, sendedMonth=:sendedMonth, sendedCount=:sendedCount, rejectType=:rejectType WHERE masssmsID=:masssmsID
masssms.write.updateMassSMSSMS=UPDATE tm_masssms_sms SET senderPhone=:senderPhone, msgType=:msgType, smsMsg=:smsMsg WHERE masssmsID=:masssmsID
#대량SMS리스트 
masssms.write.listMassSMSList=SELECT m.masssmsID,  m.masssmsTitle, m.sendType, m.approveUserID, s.sendScheduleDate, s.scheduleID, s.sendStartTime, s.sendEndTime, s.targetTotalCount, s.sendTotalCount, s.state,  m.userID, u.userName, u.groupID, g.groupName, m.priority ,s.registDate \
				FROM tm_masssms_info m INNER JOIN tm_masssms_schedule s ON m.masssmsID = s.masssmsID \
				INNER JOIN tm_masssms_sms a ON a.masssmsID = m.masssmsID \
				INNER JOIN tm_users u ON m.userID=u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE s.deleteYN='N'
masssms.write.selecttail=ORDER BY s.sendScheduleDate DESC LIMIT :start , :countPerPage
masssms.write.totalCountMassSMSList=SELECT COUNT(*) \
				FROM tm_masssms_info m INNER JOIN tm_masssms_schedule s ON m.masssmsID = s.masssmsID \
				INNER JOIN tm_masssms_sms a ON a.masssmsID = m.masssmsID \
				INNER JOIN tm_users u ON m.userID=u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE s.deleteYN='N' 
#대상자그룹
masssms.write.listTargetingGroup=SELECT targetGroupID, masssmsID, targetID, targetName, targetType, targetCount, exceptYN FROM tm_masssms_targetgroup WHERE masssmsID=:masssmsID
#입력정보보기
masssms.write.viewMassSMSInfo=SELECT i.masssmsID, i.masssmsTitle, i.description,i.sendType,  \
						i.statisticsOpenType, i.repeatSendType, i.repeatSendWeek, i.repeatSendDay, i.memo, i.userID, u.userName, (select groupID from tm_users where userID = i.userID) as groupID, i.approveUserID, i.approveDate, i.priority, \
						m.senderPhone, m.msgType, m.smsMsg, i.repeatSendStartDate, i.repeatSendEndDate, hour(i.repeatSendStartDate) repeatSendTimeHH, minute(i.repeatSendStartDate) repeatSendTimeMM, \
						f.rejectType, f.sendedCount, f.sendedMonth, f.sendedType, f.sendedYear, s.scheduleID, s.sendScheduleDate, hour(s.sendScheduleDate) sendScheduleDateHH, minute(s.sendScheduleDate)sendScheduleDateMM \
						FROM tm_masssms_info i INNER JOIN tm_users u ON i.approveUserID=u.userID \
						INNER JOIN tm_masssms_schedule s ON i.masssmsID=s.masssmsID \
						INNER JOIN tm_masssms_sms m ON i.masssmsID=m.masssmsID \
						INNER JOIN tm_masssms_filterset f ON i.masssmsID=f.masssmsID  WHERE i.masssmsID=:masssmsID AND s.scheduleID=:scheduleID
#필터링삭제
masssms.write.deleteMassSMSFiltering=DELETE FROM tm_masssms_filter WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID
#통계삭제
masssms.write.deleteMassSMSStatistic=DELETE FROM tm_masssms_statistic WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID
#대량SMS 삭제 (deleteYN = 'Y')
masssms.write.updateMassSMSScheduleDeleteYN=UPDATE tm_masssms_schedule set deleteYN='Y' WHERE masssmsID=:masssmsID
masssms.write.updateSendState=UPDATE tm_masssms_schedule SET state=:state WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID
masssms.write.getQeuryDB=SELECT t.queryText, j.driverType, j.driverClass, d.dbURL, d.dbUserID, d.dbUserPWD FROM tm_target_list t INNER JOIN tm_dbset d ON t.dbID=d.dbID INNER JOIN tm_jdbcset j ON d.driverID=j.driverID WHERE targetID=:targetID
masssms.write.listOnetooneTarget=SELECT o.onetooneAlias, t.fieldName FROM tm_onetoone o INNER JOIN tm_onetoone_target t ON o.onetooneID = t.onetooneID \
								WHERE t.targetID = :targetID order by t.onetooneID
masssms.write.listSystemNotify=SELECT notifyID, userID, receiverPhone, wasSended, smsCode, smsCodeMsg, registDate FROM tm_system_notify WHERE  notifyFlag=:notifyFlag AND notifyType='2' AND userID=:userID 
masssms.write.totalCountNotify=SELECT COUNT(*) FROM tm_system_notify WHERE notifyFlag=:notifyFlag AND notifyType='2' AND userID=:userID
masssms.write.selectnotifytail=\ ORDER BY registDate DESC LIMIT :start , :countPerPage
#시스템메일삭제
masssms.write.deleteSystemNotify=DELETE FROM tm_system_notify WHERE notifyID IN (
masssms.write.getMasssmsState=SELECT sendTotalCount, state from tm_masssms_schedule WHERE scheduleID = :scheduleID and masssmsID = :masssmsID 
masssms.write.listTargeting=SELECT t.targetID, t.userID, t.targetName, t.queryText, t.targetType, t.targetCount, t.dbID,u.userName, u.groupID, g.groupName \
				FROM tm_target_list t INNER JOIN tm_users u ON t.userID = u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID \
				WHERE t.state='3' AND t.bookMark != 'D' AND t.targetID IN(SELECT DISTINCT(targetID) FROM tm_onetoone_target WHERE onetooneID='2')
masssms.write.targettail=\ ORDER BY t.registDate DESC LIMIT :start, :countPerPage
masssms.write.getTargetingTotalCount=SELECT COUNT(*)  FROM tm_target_list t INNER JOIN tm_users u ON t.userID = u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE t.state IN('3') AND t.targetID IN(SELECT DISTINCT(targetID) FROM tm_onetoone_target WHERE onetooneID='2')
masssms.write.totalCountMassSMSRepeat=SELECT COUNT(*) FROM tm_masssms_info i INNER JOIN tm_users u ON i.userID=u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE i.sendType='3'
masssms.write.listMassSMSRepeat=SELECT i.masssmsID, i.masssmsTitle, u.userName, i.repeatSendType, i.repeatSendStartDate, i.repeatSendEndDate FROM tm_masssms_info i \
						INNER JOIN tm_users u ON i.userID=u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE i.sendType='3' 
masssms.write.selectrepeatmailtail=ORDER BY i.registDate DESC LIMIT :start , :countPerPage
masssms.write.viewRepeatMassSMSInfo=SELECT masssmsID, masssmsTitle, userID, repeatSendType, repeatSendWeek, repeatSendDay,  repeatSendStartDate, repeatSendEndDate FROM tm_masssms_info WHERE masssmsID=:masssmsID
masssms.write.totalCountRepeatSchedule=SELECT COUNT(*) FROM tm_masssms_schedule WHERE masssmsID=:masssmsID
masssms.write.listRepeatSchedule=SELECT masssmsID, scheduleID, sendScheduleDate, sendStartTime, state FROM tm_masssms_schedule WHERE masssmsID=:masssmsID
masssms.write.listRepeatScheduleTail=ORDER BY sendScheduleDate LIMIT :start, :countPerPage
masssms.write.deleteRepeatScheduleByChecked=DELETE FROM tm_masssms_schedule WHERE masssmsID=:masssmsID AND state IN('11') AND scheduleID IN (
masssms.write.deleteRepeatScheduleByDate=DELETE FROM tm_masssms_schedule WHERE masssmsID=:masssmsID AND state IN('11') AND sendScheduleDate>=:fromDate AND sendScheduleDate<=:toDate 
masssms.write.updateRepeatSendEndDate=UPDATE tm_masssms_info SET repeatSendEndDate=(select sendScheduleDate from tm_masssms_schedule where masssmsID=:masssmsID ORDER BY scheduleID desc LIMIT 0,1) WHERE masssmsID=:masssmsID
masssms.write.checkMasssmsSchedule=SELECT COUNT(*) FROM tm_masssms_schedule WHERE masssmsID=:masssmsID
masssms.statistic.massSMSStatisticSendInfo=SELECT sendTotal, successTotal, failTotal, readyTotal FROM tm_masssms_statistic WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID 
masssms.statistic.massSMSStatisticBasicInfo=SELECT i.masssmsTitle, i.sendType, i.statisticsOpenType, IFNULL(i.registDate,'-') registDate, u.userName,  \
						m.senderPhone, IFNULL(s.sendScheduleDate,'-') sendScheduleDate, IFNULL(s.statisticsEndDate,'-') statisticsEndDate, IFNULL(s.prepareStartTime,'-') prepareStartTime, \
						IFNULL(s.prepareEndTime,'-') prepareEndTime, IFNULL(s.sendStartTime,'-') sendStartTime, IFNULL(s.sendEndTime,'-') sendEndTime,  \
						s.state, s.backupYearMonth, s.sendTotalCount, m.smsMsg, \
						f.sendedType, f.sendedYear, f.sendedMonth, f.sendedCount, f.rejectType \
						FROM tm_masssms_info i INNER JOIN tm_users u ON i.approveUserID=u.userID \
						INNER JOIN tm_masssms_schedule s ON i.masssmsID=s.masssmsID \
						INNER JOIN tm_masssms_sms m ON i.masssmsID=m.masssmsID \
						INNER JOIN tm_masssms_filterset f ON i.masssmsID=f.masssmsID  WHERE i.masssmsID=:masssmsID AND s.scheduleID=:scheduleID						
masssms.statistic.massSMSStatisticFilterInfo=SELECT IFNULL(SUM(CASE filterType WHEN 0 THEN filterCount END),0) filterType0, \
								IFNULL(SUM(CASE filterType WHEN 1 THEN filterCount END),0) filterType1, \
								IFNULL(SUM(CASE filterType WHEN 2 THEN filterCount END),0) filterType2, \
								IFNULL(SUM(CASE filterType WHEN 3 THEN filterCount END),0) filterType3, \
								IFNULL(SUM(CASE filterType WHEN 4 THEN filterCount END),0) filterType4, \
								IFNULL(SUM(CASE filterType WHEN 5 THEN filterCount END),0) filterType5, \
								IFNULL(SUM(filterCount),0) filterTotal \
								FROM tm_masssms_filterstatistic \
								WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID 
masssms.statistic.personpreviewcount=SELECT count(*) FROM
masssms.statistic.personpreviewtotal=\ WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID 
masssms.statistic.personpreviewsuccess=\ WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID AND smsCodeType='1'
masssms.statistic.personpreviewfail=\ WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID AND smsCodeType='2' 
masssms.statistic.personpreviewready=\ WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID AND smsCodeType='0' 
masssms.statistic.personpreviewcount=SELECT count(*) FROM
masssms.statistic.personpreviewtotal=\ WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID 
masssms.statistic.personpreviewselect=SELECT receiverPhone, registDate, smsCode, smsCodeMsg FROM
#대상자 미리보기 -필터대상자
masssms.statistic.personpreviewfilter = SELECT receiverPhone, registDate, '' as smsCode, '' as smsCodeMsg  FROM
masssms.statistic.personpreview.tail =\ LIMIT :start , :count
#백업 테이블 확인 
masssms.statistic.backupyearmonth=SELECT backupYearMonth FROM tm_masssms_schedule WHERE masssmsID=:masssmsID AND scheduleID=:scheduleID 
masssms.statistic.totalCountMassSMSReportMonthList=SELECT COUNT(*) \
				FROM tm_masssms_info m INNER JOIN tm_masssms_schedule s ON m.masssmsID = s.masssmsID \
				INNER JOIN tm_masssms_sms a ON a.masssmsID = m.masssmsID \
				INNER JOIN tm_users u ON m.userID=u.userID INNER JOIN tm_usergroup g ON u.groupID=g.groupID WHERE s.deleteYN='N' 
masssms.reportmonth.where=DATE_FORMAT(sendScheduleDate, '%Y')=:year AND DATE_FORMAT(sendScheduleDate, '%m')=:month
masssms.reportmonth.totalinfo=SELECT  count(scheduleID) totalCount, \
									count(CASE state WHEN 00 THEN 1 END) writeCount, \
									count(CASE state WHEN 10 THEN 1 END) appReadyCount, \
									count(CASE state WHEN 11 THEN 1 WHEN 12 THEN 1 WHEN 13 THEN 1 END) readyCount, \
									count(CASE state WHEN 14 THEN 1  WHEN 16 THEN 1 END) sendingCount, \
									count(CASE state WHEN 15 THEN 1 END) sendFinishCount, \
									count(CASE state WHEN 22 THEN 1 WHEN 24 THEN 1 WHEN 26 THEN 1 END) errCount, \
									count(CASE state WHEN 32 THEN 1 WHEN 34 THEN 1 WHEN 44 THEN 1 END) sendingStopCount \
						       FROM tm_masssms_schedule S INNER JOIN tm_masssms_info I ON S.masssmsID = I.masssmsID INNER JOIN tm_users U ON I.userID = U.userID  \
						       WHERE S.deleteYN='N' AND DATE_FORMAT(sendScheduleDate, '%Y')=:year AND DATE_FORMAT(sendScheduleDate, '%m')=:month
masssms.reportmonth.sendinfo=SELECT sendTotal,  successTotal, failTotal, readyTotal  FROM tm_masssms_statistic D INNER JOIN tm_masssms_schedule S ON D.masssmsID = S.masssmsID AND D.scheduleID = S.scheduleID INNER JOIN tm_masssms_info I ON  S.masssmsID = I.masssmsID INNER JOIN tm_users U ON I.userID = U.userID \
									 WHERE S.deleteYN='N' AND DATE_FORMAT(sendScheduleDate, '%Y')=:year AND DATE_FORMAT(sendScheduleDate, '%m')=:month 
masssms.statistic.usersselect=SELECT C.userID, D.userName, E.groupName, A.sendTotal, A.successTotal, A.failTotal, A.readyTotal FROM tm_masssms_statistic A \
								INNER JOIN tm_masssms_schedule B ON A.masssmsID = B.masssmsID AND  A.scheduleID = B.scheduleID \
								INNER JOIN tm_masssms_info C ON A.masssmsID = C.masssmsID \
								INNER JOIN tm_users D ON C.userID = D.userID \
								INNER JOIN tm_usergroup E ON E.groupID=D.groupID WHERE B.deleteYN='N' AND DATE_FORMAT(sendScheduleDate, '%Y')=:year AND DATE_FORMAT(sendScheduleDate, '%m')=:month
masssms.statistic.usersgroupby=\ GROUP BY C.userID, D.userName, E.groupName 
#발송스케쥴
masssms.schedule.schedulelist=select s.masssmsID, s.scheduleID, i.masssmsTitle, i.userID, s.sendScheduleDate, g.groupID, u.userName, u.userLevel, i.description, i.sendType, s.state, s.targetTotalCount \
					from tm_masssms_schedule s INNER JOIN tm_masssms_info i on s.masssmsID = i.masssmsID \
					INNER JOIN tm_users u on i.userID=u.userID \
					INNER JOIN tm_usergroup g on u.groupID=g.groupID \
					WHERE s.deleteYN='N' AND s.sendScheduleDate like :yyyy_mm 
masssms.schedule.schedule.tail=\ order by s.sendScheduleDate 
masssms.schedule.viewSchedule=select s.masssmsID, s.scheduleID, i.masssmsTitle, i.userID, s.sendScheduleDate, u.userName, u.userLevel, i.description, i.sendType, s.state, s.targetTotalCount \
					from tm_masssms_schedule s INNER JOIN tm_masssms_info i on s.masssmsID = i.masssmsID \
					INNER JOIN tm_users u on i.userID=u.userID \
					WHERE s.masssmsID = :masssmsID and s.scheduleID = :scheduleID 
